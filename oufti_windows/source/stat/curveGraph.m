function h = curveGraph(T,L,logData,forceGrey)
%--------------------------------------------------------------------------
%--------------------------------------------------------------------------
% function h = curveGraph(T,L,logData)
%
% @authors: Manuel Campos
% @dat:     December 29 2014
% @copyright 2014-2015 Yale University
%==========================================================================
%**********OUTPUT**********
%h:         handle to the figure generated by the function
%==========================================================================
%**********INPUT*********** 
%T:         cell array of frames in which cells are detected in a time
%               lapse generated by getLLoCurves.m as dataStr.frames 
%L:         cell array of cell lengthes in which cells are detected in a 
%               time lapse generated by getLLoCurves.m as dataStr.lengthes
%logData:   logical array of the same length as T or L identifying the
%               cells you want to highlight in the graph
%forceGrey:  logical 0 or 1 to indicate if grey color is forced or not.
% 
% Example:
% After running getLLoCurves.m which generates dataStr:
% h = curveGraph(dataStr.frames,dataStr.lengthes,dataStr.gRates<0)
% OR
% h = curveGraph(dataStr.frames,dataStr.lengthes,dataStr.cct>20)
% OR
% h = curveGraph(dataStr.frames,dataStr.lengthes,dataStr.rmseFit>0.01)


% Determine if the cell length data are normalized or not and name y-axis
% accordingly
%#function [getLLoCurves curveGraph]
Lo=cellfun(@(x) x(1),L,'un',1);
if nanmean(Lo)==1
    yname='Length / Length_{birth}';
else
    yname='Length,px';
end

% organize data amd colormap for plotting
% if no query input, attribute color (jet colormap) according to the
% frame of birth
% When logical query is introduced through logData, all non-relevant curves
% are grey and thin while the selected ones are red and thick, plotted last
if isempty(logData)
     PP=[T';L'];%prepare data to plot directly from a cell array
     lin=repmat({1},length(T),1);% prepare to set 'linewidth' plot parameter
    if forceGrey
        clmap=repmat([.75 .75 .75],length(T),1);%All curves are grey initially
        h=figure;
        set(gcf,'DefaultAxesColorOrder',clmap);
        hgc=plot(PP{:});
        set(gca,'fontname','arial','fontsize',16);box off;
        set(hgc,{'linewidth'},lin);
        xlabel('Frame','fontname','arial','fontsize',16,'fontweight','b');
        ylabel(yname,'fontname','arial','fontsize',16,'fontweight','b');
    else
        try
            zz = cell(1,numel(T));
            firstNumFun = @(x) x(1);
            firstNum = cellfun(firstNumFun,T);
            uniqueFirstNum = unique(firstNum);
            dd = jet(numel(uniqueFirstNum));
            for ii = 1:numel(firstNum)
            for jj = 1:numel(uniqueFirstNum)
            if uniqueFirstNum(jj) == firstNum(ii)
            zz{ii} = dd(jj,:);
            end
            end
            end
            zz = cat(1,zz{:});
            h=figure('position',[400 200 640 480]);
            set(gcf,'DefaultAxesColorOrder',zz);
            hgc=plot(PP{:});
            colormap(dd);
            set(gca,'fontname','arial','fontsize',16);box off;
            set(hgc,{'linewidth'},lin);
            xlabel('Frame','fontname','arial','fontsize',16,'fontweight','b');
            ylabel(yname,'fontname','arial','fontsize',16,'fontweight','b');
            hlg=colorbar;
            nb=max(uniqueFirstNum);
            tetraTest=(nb-1)/4==round((nb-1)/4);
            if ~tetraTest
                val=round(4*nb/5);
                intSearch=(val-2:val+2);
                ixInt=((intSearch-1)./3)./(round((intSearch-1)./3))==1;
                C=intSearch(ixInt);
                ytk=[(linspace(1,C(1),4)),nb];
            else
                ytk=linspace(1,nb,5);
            end
            tickLables = {num2str(ytk')};
            set(hlg,'Ytick',ytk/max(ytk)','yticklabel',tickLables);
            ylabel(hlg,'Time of birth, frame','fontname','arial','fontsize',16,'fontweight','b');
        catch
            warndlg('Plot can not be generated');
            return;
        end

    end
else
    clmap=repmat([.75 .75 .75],length(T),1);%All curves are grey initially
    clmap(logData,:)=repmat([.85 .16 0],sum(logData),1);%Selected cells are red
    % sort to plot selected cells/curves last
    [~,ix]=sort(clmap(:,3),'descend');% Blue component used to sort grey/red
    clmap=clmap(ix,:);% Re-organize the colors to get the reds last
    h=figure;
    set(gcf,'DefaultAxesColorOrder',clmap);
    PP=[T(ix)';L(ix)'];%Organize data for plotting a cell array of arrays and sort them according to teh query
    lin=repmat({1},length(T),1);% prepare to set 'linewidth' plot parameter
    lin(end-sum(logData)+1:end)=repmat({2},sum(logData),1);% selected curves are thicker
    hgc=plot(PP{:});
    set(gca,'fontname','arial','fontsize',16);box off;
    set(hgc,{'linewidth'},lin);
    xlabel('Frame','fontname','arial','fontsize',16,'fontweight','b');
    ylabel(yname,'fontname','arial','fontsize',16,'fontweight','b');
end

if ~isempty(logData)
prctSelect=sum(logData)/length(logData);prctSelect=round(1000*prctSelect)/10;
txt={[num2str(sum(logData)),' out of ',num2str(length(logData)),' (',num2str(prctSelect),'%)'];'cells selected'};
text(0.05,0.92,txt,'Units','normalized','Fontsize',14);
end
end